#!/bin/bash
ulimit -n 40960


# WARNING: This file was auto-generated. Do not edit!
#          All your edit might be overwritten! 

{% set status_dir = tidb_status_dir -%}

{% set all_pd = [] -%}
{% set pd_hosts = groups.pd_servers %}
{% for host in pd_hosts -%}
  {% set pd_ip = hostvars[host].ansible_default_ipv4.address-%}
  {% set pd_port = hostvars[host].pd_client_port -%}
  {% set _ = all_pd.append("%s:%s" % (pd_ip, pd_port)) -%}
{% endfor -%}

{% set metric_host = hostvars[groups.monitoring_servers[0]].ansible_default_ipv4.address if groups.monitoring_servers else "" -%}
{% set metric_port = hostvars[groups.monitoring_servers[0]].pushgateway_port if metric_host else "" -%}
{% set metric_addr = metric_host ~ ":" ~ metric_port if metric_host else "" -%}
{% set metric_interval = tidb_metric_interval if metric_host else "" -%}


# running as root?
if [ "$(id -u)" -eq 0 ]; then
    echo "warning: run as root is dangerous! try switch to user: {{ deploy_user }}!"
    echo "error: did nothing!"
    exit 1
fi

# try up
bin/svc -u "{{ status_dir }}" &>/dev/null || true

# check by svstat
_check=$(bin/svstat "{{ status_dir }}" 2>/dev/null)
if echo "${_check}" | grep 'up pid' &>/dev/null; then
    _pid=$(echo "${_check}" | cut -d' ' -f 4)
    if [ "$(readlink /proc/${_pid}/cwd)" == "{{ deploy_dir }}" ]; then
        echo "ok: already started!"
        exit 0
    else
        echo "warning: status dir is not clean"
    fi
fi

# check by pid
if [ -e "{{ status_dir }}/pid" ]; then
    _pid=$(cat "{{ status_dir }}/pid")
    if ps aux | grep supervise | grep -v grep | grep "${_pid}" &>/dev/null; then
        echo "error: supervise of pid ${_pid} is alive! but process is down!"
        exit 1
    fi
    # rm -f "{{ status_dir }}/pid"
fi

cd "{{ deploy_dir }}" || exit 1

nohup bin/supervise "{{ status_dir }}" \
    bin/tidb-server \
    -P {{ tidb_port }} \
    --store=tikv --path="{{ all_pd | join(',') }}"\
    -L="{{ tidb_log_level }}" --log-file="{{ tidb_log_dir }}/{{ tidb_log_filename }}" \
    --status="{{ tidb_status_port }}" --metrics-addr="{{ metric_addr }}" --metrics-interval={{ metric_interval }} \
    --lease 1 >/dev/null 2>&1 &

echo $! > "{{ status_dir }}/pid"
echo "ok: started!"